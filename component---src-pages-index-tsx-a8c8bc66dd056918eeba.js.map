{"version":3,"file":"component---src-pages-index-tsx-a8c8bc66dd056918eeba.js","mappings":"gNAqCA,MA1ByB,KACrB,MAAM,EAACA,EAAU,EAACC,IAAgBC,EAAAA,EAAAA,UAAoB,KAChD,EAACC,EAAkB,EAACC,IAAwBF,EAAAA,EAAAA,UAAoB,KAEtEG,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAmBC,EAAKC,KAAKC,IAAO,CACtCC,KAAMD,EAAQC,KACdC,KAAMF,EAAQG,MAAMC,IACpBC,OAAQL,EAAQK,OAChBC,WAAYN,EAAQM,WACpBC,QAASP,EAAQO,SAAW,UAEhCf,EAAaK,GACbF,EAAqBE,EAAiB,GACvC,IASH,MAAO,CAAEH,oBAAmBc,gBAPJ,CAACC,EAAqBJ,KAC1C,MAAMK,EAAWnB,EAAUoB,QAAQX,GACxBA,EAAQC,KAAKW,cAAcC,SAASJ,EAAYG,iBAA8B,qBAAXP,GAAiCL,EAAQK,SAAWA,KAElIV,EAAqBe,EAAS,EAGW,E,6BC8BjD,MAzDiC,KAC7B,MAAM,kBAAEhB,EAAiB,gBAAEc,GAAoBM,KACzC,EAACL,EAAY,EAACM,IAAkBtB,EAAAA,EAAAA,UAAS,KACzC,EAACY,EAAO,EAACW,IAAavB,EAAAA,EAAAA,UAAS,oBAcrC,OACIwB,EAAAA,cAAAA,MAAAA,KACIA,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,oBACXD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,oBACXD,EAAAA,cAACE,EAAAA,EAAe,CAACC,KAAMC,EAAAA,MACvBJ,EAAAA,cAAAA,QAAAA,CACIK,KAAK,OACLC,YAAY,0BACZC,MAAOf,EACPgB,SArBQC,IACxB,MAAMF,EAAQE,EAAMC,OAAOH,MAC3BT,EAAeS,GACfhB,EAAgBgB,EAAOnB,EAAO,KAqBtBY,EAAAA,cAAAA,SAAAA,CAAQO,MAAOnB,EAAQoB,SAlBPC,IACxB,MAAMF,EAAQE,EAAMC,OAAOH,MAC3BR,EAAUQ,GACVhB,EAAgBC,EAAae,EAAM,GAgBvBP,EAAAA,cAAAA,SAAAA,KAAQ,oBACRA,EAAAA,cAAAA,SAAAA,KAAQ,UACRA,EAAAA,cAAAA,SAAAA,KAAQ,YACRA,EAAAA,cAAAA,SAAAA,KAAQ,QACRA,EAAAA,cAAAA,SAAAA,KAAQ,UACRA,EAAAA,cAAAA,SAAAA,KAAQ,aAGhBA,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,gBACVxB,EAAkBK,KAAKC,GACpBiB,EAAAA,cAAAA,MAAAA,CAAKW,IAAK5B,EAAQC,KAAMiB,UAAU,qBAC9BD,EAAAA,cAACY,EAAAA,KAAI,CAACC,GAAE,UAAY9B,EAAQC,KAAKW,eAC7BK,EAAAA,cAAAA,MAAAA,CAAKc,IAAK/B,EAAQE,KAAM8B,IAAQhC,EAAQC,KAAI,WAEhDgB,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,gBACXD,EAAAA,cAAAA,KAAAA,KAAKjB,EAAQC,MACbgB,EAAAA,cAAAA,OAAAA,KAAM,eAAY,yBAAIjB,EAAQM,WAAW2B,mBACzChB,EAAAA,cAAAA,OAAAA,KAAM,WAAQ,yBAAIjB,EAAQK,SAC1BY,EAAAA,cAAAA,OAAAA,KAAM,YAAS,yBAAIjB,EAAQO,eAKzC,EC9Cd,MAVkB,IAEdU,EAAAA,cAACiB,EAAAA,EAAM,KACLjB,EAAAA,cAAAA,OAAAA,KACEA,EAAAA,cAACkB,EAAc,O","sources":["webpack://gatsby-countries/./src/utils/countryFilter.tsx","webpack://gatsby-countries/./src/utils/countryDisplay.tsx","webpack://gatsby-countries/./src/pages/index.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport data from '../../src/data/data.json';\r\n\r\ninterface Country {\r\n    name: string;\r\n    flag: string;\r\n    region: string;\r\n    population: number;\r\n    capital: string;\r\n}\r\n\r\nconst useCountryFilter = () => {\r\n    const [countries, setCountries] = useState<Country[]>([]);\r\n    const [filteredCountries, setFilteredCountries] = useState<Country[]>([]);\r\n\r\n    useEffect(() => {\r\n        const initialCountries = data.map((country) => ({\r\n            name: country.name,\r\n            flag: country.flags.png,\r\n            region: country.region,\r\n            population: country.population,\r\n            capital: country.capital || \"N/A\",\r\n        }));\r\n        setCountries(initialCountries);\r\n        setFilteredCountries(initialCountries);\r\n    }, []);\r\n\r\n    const filterCountries = (searchValue: string, region: string) => {\r\n        const filtered = countries.filter((country) => {\r\n            return country.name.toLowerCase().includes(searchValue.toLowerCase()) && (region === \"Filter by Region\" || country.region === region);\r\n        });\r\n        setFilteredCountries(filtered);\r\n    };\r\n\r\n    return { filteredCountries, filterCountries };\r\n};\r\n\r\nexport default useCountryFilter;\r\n","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport useCountryFilter from \"../utils/countryFilter\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"gatsby\";\r\n\r\nconst CountryDisplay: React.FC = () => {\r\n    const { filteredCountries, filterCountries } = useCountryFilter();\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const [region, setRegion] = useState(\"Filter by Region\");\r\n\r\n    const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = event.target.value;\r\n        setSearchValue(value);\r\n        filterCountries(value, region);\r\n    };\r\n\r\n    const handleRegionChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n        const value = event.target.value;\r\n        setRegion(value);\r\n        filterCountries(searchValue, value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"filter-container\">\r\n                <div className=\"search-container\">\r\n                    <FontAwesomeIcon icon={faMagnifyingGlass} />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search for a country...\"\r\n                        value={searchValue}\r\n                        onChange={handleSearchChange}\r\n                    />\r\n                </div>\r\n                <select value={region} onChange={handleRegionChange}>\r\n                    <option>Filter by Region</option>\r\n                    <option>Africa</option>\r\n                    <option>Americas</option>\r\n                    <option>Asia</option>\r\n                    <option>Europe</option>\r\n                    <option>Oceania</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"country-list\">\r\n                {filteredCountries.map((country) => (\r\n                    <div key={country.name} className=\"country-container\">\r\n                        <Link to={`/about/${country.name.toLowerCase()}`}>\r\n                            <img src={country.flag} alt={`${country.name} flag`} />\r\n                        </Link>\r\n                        <div className=\"country-info\">\r\n                            <h3>{country.name}</h3>\r\n                            <span>Population: <p>{country.population.toLocaleString()}</p></span>\r\n                            <span>Region: <p>{country.region}</p></span>\r\n                            <span>Capital: <p>{country.capital}</p></span>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CountryDisplay;\r\n","import * as React from \"react\";\r\nimport Layout from \"../components/layouts/layout\";\r\nimport CountryDisplay from \"../utils/countryDisplay\";\r\n\r\nconst IndexPage = () => {\r\n  return (\r\n    <Layout>\r\n      <main>\r\n        <CountryDisplay />\r\n      </main>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default IndexPage;"],"names":["countries","setCountries","useState","filteredCountries","setFilteredCountries","useEffect","initialCountries","data","map","country","name","flag","flags","png","region","population","capital","filterCountries","searchValue","filtered","filter","toLowerCase","includes","useCountryFilter","setSearchValue","setRegion","React","className","FontAwesomeIcon","icon","faMagnifyingGlass","type","placeholder","value","onChange","event","target","key","Link","to","src","alt","toLocaleString","Layout","CountryDisplay"],"sourceRoot":""}