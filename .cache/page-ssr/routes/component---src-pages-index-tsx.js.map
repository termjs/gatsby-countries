{"version":3,"file":"component---src-pages-index-tsx.js","mappings":"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","sources":["webpack://gatsby-countries/./src/utils/countryFilter.tsx","webpack://gatsby-countries/./src/utils/countryDisplay.tsx","webpack://gatsby-countries/./src/pages/index.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport data from '../../src/data/data.json';\r\n\r\ninterface Country {\r\n    name: string;\r\n    flag: string;\r\n    region: string;\r\n    population: number;\r\n    capital: string;\r\n}\r\n\r\nconst useCountryFilter = () => {\r\n    const [countries, setCountries] = useState<Country[]>([]);\r\n    const [filteredCountries, setFilteredCountries] = useState<Country[]>([]);\r\n\r\n    useEffect(() => {\r\n        const initialCountries = data.map((country) => ({\r\n            name: country.name,\r\n            flag: country.flags.png,\r\n            region: country.region,\r\n            population: country.population,\r\n            capital: country.capital || \"N/A\",\r\n        }));\r\n        setCountries(initialCountries);\r\n        setFilteredCountries(initialCountries);\r\n    }, []);\r\n\r\n    const filterCountries = (searchValue: string, region: string) => {\r\n        const filtered = countries.filter((country) => {\r\n            return country.name.toLowerCase().includes(searchValue.toLowerCase()) && (region === \"Filter by Region\" || country.region === region);\r\n        });\r\n        setFilteredCountries(filtered);\r\n    };\r\n\r\n    return { filteredCountries, filterCountries };\r\n};\r\n\r\nexport default useCountryFilter;\r\n","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport useCountryFilter from \"../utils/countryFilter\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"gatsby\";\r\n\r\nconst CountryDisplay: React.FC = () => {\r\n    const { filteredCountries, filterCountries } = useCountryFilter();\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const [region, setRegion] = useState(\"Filter by Region\");\r\n\r\n    const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = event.target.value;\r\n        setSearchValue(value);\r\n        filterCountries(value, region);\r\n    };\r\n\r\n    const handleRegionChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n        const value = event.target.value;\r\n        setRegion(value);\r\n        filterCountries(searchValue, value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"filter-container\">\r\n                <div className=\"search-container\">\r\n                    <FontAwesomeIcon icon={faMagnifyingGlass} />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search for a country...\"\r\n                        value={searchValue}\r\n                        onChange={handleSearchChange}\r\n                    />\r\n                </div>\r\n                <select value={region} onChange={handleRegionChange}>\r\n                    <option>Filter by Region</option>\r\n                    <option>Africa</option>\r\n                    <option>Americas</option>\r\n                    <option>Asia</option>\r\n                    <option>Europe</option>\r\n                    <option>Oceania</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"country-list\">\r\n                {filteredCountries.map((country) => (\r\n                    <div key={country.name} className=\"country-container\">\r\n                        <Link to={`/about/${country.name.toLowerCase()}`}>\r\n                            <img src={country.flag} alt={`${country.name} flag`} />\r\n                        </Link>\r\n                        <div className=\"country-info\">\r\n                            <h3>{country.name}</h3>\r\n                            <span>Population: <p>{country.population.toLocaleString()}</p></span>\r\n                            <span>Region: <p>{country.region}</p></span>\r\n                            <span>Capital: <p>{country.capital}</p></span>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CountryDisplay;\r\n","import * as React from \"react\";\r\nimport Layout from \"../components/layouts/layout\";\r\nimport CountryDisplay from \"../utils/countryDisplay\";\r\n\r\nconst IndexPage = () => {\r\n  return (\r\n    <Layout>\r\n      <main>\r\n        <CountryDisplay />\r\n      </main>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default IndexPage;"],"names":["useState","useEffect","data","useCountryFilter","countries","setCountries","filteredCountries","setFilteredCountries","initialCountries","map","country","name","flag","flags","png","region","population","capital","filterCountries","searchValue","filtered","filter","toLowerCase","includes","React","FontAwesomeIcon","faMagnifyingGlass","Link","CountryDisplay","setSearchValue","setRegion","handleSearchChange","event","value","target","handleRegionChange","className","icon","type","placeholder","onChange","key","to","src","alt","toLocaleString","Layout","IndexPage"],"sourceRoot":""}