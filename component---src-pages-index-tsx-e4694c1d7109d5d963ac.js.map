{"version":3,"file":"component---src-pages-index-tsx-e4694c1d7109d5d963ac.js","mappings":"8NA6FA,MAxFsB,KAClB,MAAM,EAACA,EAAU,EAACC,IAAgBC,EAAAA,EAAAA,UAAgG,IAG5HC,EAAmBC,IACrB,MAAMC,EAAeC,SAASC,cAAc,sBAA2CC,MACjFC,EAAUH,SAASI,eAAe,UAAgCF,MAGlEG,EAAoBX,EAAUY,QAAQC,GACjCA,EAAQC,KAAKC,cAAcC,SAASX,EAAYU,iBAA8B,qBAAXN,GAAiCI,EAAQJ,SAAWA,KAIlIQ,EAAiBN,EAAkB,EAIjCM,EAAoBjB,IACtB,MAAMkB,EAAcZ,SAASa,uBAAuB,gBAAgB,GAChED,IACAA,EAAYE,UAAY,IAG5BpB,EAAUqB,SAASR,IACf,MAAMS,EAAiBhB,SAASiB,cAAc,OAC9CD,EAAeE,UAAY,oBAC3BF,EAAeF,UAAS,yEAEVP,EAAQC,KAAI,mDACKD,EAAQY,WAAU,qDACtBZ,EAAQJ,OAAM,sDACbI,EAAQa,QAAO,oDAG3C,MAAMC,EAAarB,SAASiB,cAAc,OAC1CI,EAAWC,IAAMf,EAAQgB,KACzBF,EAAWG,IAASjB,EAAQC,KAAI,QAEhC,MAAMiB,EAAczB,SAASiB,cAAc,KAC3CQ,EAAYC,KAAI,UAAanB,EAAQC,KAAKC,cAC1CgB,EAAYE,YAAYN,GAExBL,EAAeY,aAAaH,EAAaT,EAAea,YAEpDjB,GACAA,EAAYe,YAAYX,EAC5B,GACF,EAmBN,OAZFc,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAmBC,EAAKC,KAAK1B,IAAO,CACxCC,KAAMD,EAAQC,KACde,KAAMhB,EAAQ2B,MAAMC,IACpBhC,OAAQI,EAAQJ,OAChBgB,WAAYZ,EAAQY,WACpBC,QAASb,EAAQa,SAAW,UAE9BzB,EAAaoC,GACbpB,EAAiBoB,EAAiB,GACjC,IAGGK,EAAAA,cAAAA,MAAAA,KACIA,EAAAA,cAAAA,MAAAA,CAAKlB,UAAU,oBACXkB,EAAAA,cAAAA,MAAAA,CAAKlB,UAAU,oBACXkB,EAAAA,cAACC,EAAAA,EAAe,CAACC,KAAMC,EAAAA,MACvBH,EAAAA,cAAAA,QAAAA,CAAOI,KAAK,OAAOC,YAAY,0BAA0BC,SAAU7C,KAEvEuC,EAAAA,cAAAA,SAAAA,CAAQO,GAAG,SAASD,SAAW5C,GAAUD,KACrCuC,EAAAA,cAAAA,SAAAA,KAAQ,oBACRA,EAAAA,cAAAA,SAAAA,KAAQ,UACRA,EAAAA,cAAAA,SAAAA,KAAQ,YACRA,EAAAA,cAAAA,SAAAA,KAAQ,QACRA,EAAAA,cAAAA,SAAAA,KAAQ,UACRA,EAAAA,cAAAA,SAAAA,KAAQ,aAGhBA,EAAAA,cAAAA,MAAAA,CAAKlB,UAAU,iBACb,EC3Ed,MAVkB,IAEdkB,EAAAA,cAACQ,EAAAA,EAAM,KACLR,EAAAA,cAAAA,OAAAA,KACEA,EAAAA,cAACS,EAAa,O","sources":["webpack://countries-api/./src/utils/countryFilter.tsx","webpack://countries-api/./src/pages/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMagnifyingGlass } from '@fortawesome/free-solid-svg-icons';\r\nimport data from '../../src/data/data.json';\r\n\r\nconst CountrySearch = () => {\r\n    const [countries, setCountries] = useState<{ name: string; flag: string; region: string; population: number; capital: string }[]>([]);\r\n    \r\n    // Filter the countries based on the search input and region selection\r\n    const filterCountries = (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n        const searchValue = (document.querySelector('input[type=\"text\"]') as HTMLInputElement).value;\r\n        const region = (document.getElementById(\"region\") as HTMLSelectElement).value;\r\n\r\n        // Filter the countries based on the search input and region selection\r\n        const filteredCountries = countries.filter((country: { name: string; flag: string; region: string }) => {\r\n            return country.name.toLowerCase().includes(searchValue.toLowerCase()) && (region === \"Filter by Region\" || country.region === region);\r\n        });\r\n\r\n        // Display the filtered countries\r\n        displayCountries(filteredCountries);\r\n    };\r\n\r\n    // Display the countries\r\n    const displayCountries = (countries: { name: string; flag: string; population: number; region: string; capital: string }[]) => {\r\n        const countryList = document.getElementsByClassName(\"country-list\")[0];\r\n        if (countryList) {\r\n            countryList.innerHTML = \"\";\r\n        }\r\n\r\n        countries.forEach((country) => {\r\n            const countryElement = document.createElement(\"div\");\r\n            countryElement.className = \"country-container\";\r\n            countryElement.innerHTML = `\r\n                <div class=\"country-info\">\r\n                    <h3>${country.name}</h3>\r\n                    <span>Population: <p>${country.population}</p></span>\r\n                    <span>Region: <p>${country.region}</p></span>\r\n                    <span>Capital: <p>${country.capital}</p></span>\r\n                </div>\r\n            `;\r\n            const imgElement = document.createElement(\"img\");\r\n            imgElement.src = country.flag;\r\n            imgElement.alt = `${country.name} flag`;\r\n\r\n            const linkElement = document.createElement(\"a\");\r\n            linkElement.href = `/about/${country.name.toLowerCase()}`;\r\n            linkElement.appendChild(imgElement);\r\n\r\n            countryElement.insertBefore(linkElement, countryElement.firstChild);\r\n\r\n            if (countryList) {\r\n                countryList.appendChild(countryElement);\r\n            }\r\n        });\r\n    };\r\n\r\n    // Get all of the countries from the JSON file\r\n    // Assuming data is imported from a JSON file or an API\r\n\r\n  // Initialize countries data\r\n  useEffect(() => {\r\n    const initialCountries = data.map((country) => ({\r\n      name: country.name,\r\n      flag: country.flags.png,\r\n      region: country.region,\r\n      population: country.population,\r\n      capital: country.capital || \"N/A\",\r\n    }));\r\n    setCountries(initialCountries);\r\n    displayCountries(initialCountries);\r\n  }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"filter-container\">\r\n                <div className=\"search-container\">\r\n                    <FontAwesomeIcon icon={faMagnifyingGlass} />\r\n                    <input type=\"text\" placeholder=\"Search for a country...\" onChange={filterCountries} />\r\n                </div>\r\n                <select id=\"region\" onChange={(event) => filterCountries(event as React.ChangeEvent<HTMLSelectElement>)}>\r\n                    <option>Filter by Region</option>\r\n                    <option>Africa</option>\r\n                    <option>Americas</option>\r\n                    <option>Asia</option>\r\n                    <option>Europe</option>\r\n                    <option>Oceania</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"country-list\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CountrySearch;\r\n","import * as React from \"react\";\r\nimport Layout from \"../components/layout\";\r\nimport CountrySearch from \"../utils/countryFilter\";\r\n\r\nconst IndexPage = () => {\r\n  return (\r\n    <Layout>\r\n      <main>\r\n        <CountrySearch />\r\n      </main>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default IndexPage;"],"names":["countries","setCountries","useState","filterCountries","event","searchValue","document","querySelector","value","region","getElementById","filteredCountries","filter","country","name","toLowerCase","includes","displayCountries","countryList","getElementsByClassName","innerHTML","forEach","countryElement","createElement","className","population","capital","imgElement","src","flag","alt","linkElement","href","appendChild","insertBefore","firstChild","useEffect","initialCountries","data","map","flags","png","React","FontAwesomeIcon","icon","faMagnifyingGlass","type","placeholder","onChange","id","Layout","CountrySearch"],"sourceRoot":""}